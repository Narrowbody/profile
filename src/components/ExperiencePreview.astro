---
import type { CollectionEntry } from 'astro:content';


interface Props {
	experiences: CollectionEntry<'experience'>;
}

const { data, slug } = Astro.props.experiences;


---

<script>
const observer = new IntersectionObserver((entries) => {
  entries.forEach((entry) => {
    console.log(entry);
    if (entry.isIntersecting) {
      entry.target.classList.add('show');
    } else {
      entry.target.classList.remove('show');
    }
  });
});
const hiddentElements = document.querySelectorAll('.hidden');
hiddentElements.forEach((el) => observer.observe(el));
</script>

<main>
	<section class="hidden">
			<a class="box" href={`/experience/${slug}`}>
				<span class="">{data.company}</span>
				<h2>{data.fromDate} to {data.toDate}</h2>
				<img src={data.logo} alt={data.location || ''} loading="lazy" decoding="async" />
			</a>
	</section>
</main>


<style>
main {
		display: grid;
		place-items: center;
		align-content: center;
		min-height: 40vh;
	
	}

	.hidden {
		opacity: 0;
		transition: all 3s;
	}

	.show {
		opacity: 1;
	}

		.box {
		border: 1px solid var(--gray-800);
		border-radius: 0.75rem;
		padding: 1.5rem;
		background-color: var(--gray-999_40);
		box-shadow: var(--shadow-sm);
	}

		h2 {
		font-size: var(--text-lg);
	}

	.card {
		
	}

	.card:hover {
		
	}

	.title {
		
	}

	

	img {
		
	}

	@media (min-width: 50em) {
		.card {
			height: 22rem;
			border-radius: 1.5rem;
		}

		.title {
			border-radius: 0.9375rem;
		}
	}
</style>
